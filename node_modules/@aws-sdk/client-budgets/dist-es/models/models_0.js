import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { BudgetsServiceException as __BaseException } from "./BudgetsServiceException";
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export const ThresholdType = {
    ABSOLUTE_VALUE: "ABSOLUTE_VALUE",
    PERCENTAGE: "PERCENTAGE",
};
export const ActionType = {
    IAM: "APPLY_IAM_POLICY",
    SCP: "APPLY_SCP_POLICY",
    SSM: "RUN_SSM_DOCUMENTS",
};
export const ApprovalModel = {
    AUTO: "AUTOMATIC",
    MANUAL: "MANUAL",
};
export const ActionSubType = {
    STOP_EC2: "STOP_EC2_INSTANCES",
    STOP_RDS: "STOP_RDS_INSTANCES",
};
export const NotificationType = {
    ACTUAL: "ACTUAL",
    FORECASTED: "FORECASTED",
};
export const ActionStatus = {
    Execution_Failure: "EXECUTION_FAILURE",
    Execution_In_Progress: "EXECUTION_IN_PROGRESS",
    Execution_Success: "EXECUTION_SUCCESS",
    Pending: "PENDING",
    Reset_Failure: "RESET_FAILURE",
    Reset_In_Progress: "RESET_IN_PROGRESS",
    Reverse_Failure: "REVERSE_FAILURE",
    Reverse_In_Progress: "REVERSE_IN_PROGRESS",
    Reverse_Success: "REVERSE_SUCCESS",
    Standby: "STANDBY",
};
export const SubscriptionType = {
    EMAIL: "EMAIL",
    SNS: "SNS",
};
export const EventType = {
    CreateAction: "CREATE_ACTION",
    DeleteAction: "DELETE_ACTION",
    ExecuteAction: "EXECUTE_ACTION",
    System: "SYSTEM",
    UpdateAction: "UPDATE_ACTION",
};
export const AutoAdjustType = {
    FORECAST: "FORECAST",
    HISTORICAL: "HISTORICAL",
};
export const BudgetType = {
    Cost: "COST",
    RICoverage: "RI_COVERAGE",
    RIUtilization: "RI_UTILIZATION",
    SPCoverage: "SAVINGS_PLANS_COVERAGE",
    SPUtilization: "SAVINGS_PLANS_UTILIZATION",
    Usage: "USAGE",
};
export const MatchOption = {
    ABSENT: "ABSENT",
    CASE_INSENSITIVE: "CASE_INSENSITIVE",
    CASE_SENSITIVE: "CASE_SENSITIVE",
    CONTAINS: "CONTAINS",
    ENDS_WITH: "ENDS_WITH",
    EQUALS: "EQUALS",
    GREATER_THAN_OR_EQUAL: "GREATER_THAN_OR_EQUAL",
    STARTS_WITH: "STARTS_WITH",
};
export const Dimension = {
    AZ: "AZ",
    BILLING_ENTITY: "BILLING_ENTITY",
    CACHE_ENGINE: "CACHE_ENGINE",
    COST_CATEGORY_NAME: "COST_CATEGORY_NAME",
    DATABASE_ENGINE: "DATABASE_ENGINE",
    DEPLOYMENT_OPTION: "DEPLOYMENT_OPTION",
    INSTANCE_TYPE: "INSTANCE_TYPE",
    INSTANCE_TYPE_FAMILY: "INSTANCE_TYPE_FAMILY",
    INVOICING_ENTITY: "INVOICING_ENTITY",
    LEGAL_ENTITY_NAME: "LEGAL_ENTITY_NAME",
    LINKED_ACCOUNT: "LINKED_ACCOUNT",
    LINKED_ACCOUNT_NAME: "LINKED_ACCOUNT_NAME",
    OPERATING_SYSTEM: "OPERATING_SYSTEM",
    OPERATION: "OPERATION",
    PAYMENT_OPTION: "PAYMENT_OPTION",
    PLATFORM: "PLATFORM",
    PURCHASE_TYPE: "PURCHASE_TYPE",
    RECORD_TYPE: "RECORD_TYPE",
    REGION: "REGION",
    RESERVATION_ID: "RESERVATION_ID",
    RESERVATION_MODIFIED: "RESERVATION_MODIFIED",
    RESOURCE_ID: "RESOURCE_ID",
    RIGHTSIZING_TYPE: "RIGHTSIZING_TYPE",
    SAVINGS_PLANS_TYPE: "SAVINGS_PLANS_TYPE",
    SAVINGS_PLAN_ARN: "SAVINGS_PLAN_ARN",
    SCOPE: "SCOPE",
    SERVICE: "SERVICE",
    SERVICE_CODE: "SERVICE_CODE",
    SUBSCRIPTION_ID: "SUBSCRIPTION_ID",
    TAG_KEY: "TAG_KEY",
    TENANCY: "TENANCY",
    USAGE_TYPE: "USAGE_TYPE",
    USAGE_TYPE_GROUP: "USAGE_TYPE_GROUP",
};
export const HealthStatusValue = {
    HEALTHY: "HEALTHY",
    UNHEALTHY: "UNHEALTHY",
};
export const HealthStatusReason = {
    BILLING_VIEW_NO_ACCESS: "BILLING_VIEW_NO_ACCESS",
    BILLING_VIEW_UNHEALTHY: "BILLING_VIEW_UNHEALTHY",
    FILTER_INVALID: "FILTER_INVALID",
};
export const Metric = {
    AMORTIZED_COST: "AmortizedCost",
    BLENDED_COST: "BlendedCost",
    HOURS: "Hours",
    NET_AMORTIZED_COST: "NetAmortizedCost",
    NET_UNBLENDED_COST: "NetUnblendedCost",
    NORMALIZED_USAGE_AMOUNT: "NormalizedUsageAmount",
    UNBLENDED_COST: "UnblendedCost",
    USAGE_QUANTITY: "UsageQuantity",
};
export const TimeUnit = {
    ANNUALLY: "ANNUALLY",
    DAILY: "DAILY",
    MONTHLY: "MONTHLY",
    QUARTERLY: "QUARTERLY",
};
export const ComparisonOperator = {
    EQUAL_TO: "EQUAL_TO",
    GREATER_THAN: "GREATER_THAN",
    LESS_THAN: "LESS_THAN",
};
export const NotificationState = {
    ALARM: "ALARM",
    OK: "OK",
};
export class CreationLimitExceededException extends __BaseException {
    name = "CreationLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CreationLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CreationLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class DuplicateRecordException extends __BaseException {
    name = "DuplicateRecordException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "DuplicateRecordException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DuplicateRecordException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalErrorException extends __BaseException {
    name = "InternalErrorException";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "InternalErrorException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalErrorException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidParameterException extends __BaseException {
    name = "InvalidParameterException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
    }
}
export class NotFoundException extends __BaseException {
    name = "NotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    name = "ServiceQuotaExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceLockedException extends __BaseException {
    name = "ResourceLockedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourceLockedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceLockedException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidNextTokenException extends __BaseException {
    name = "InvalidNextTokenException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
export class ExpiredNextTokenException extends __BaseException {
    name = "ExpiredNextTokenException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ExpiredNextTokenException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ExpiredNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
export const ExecutionType = {
    ApproveBudgetAction: "APPROVE_BUDGET_ACTION",
    ResetBudgetAction: "RESET_BUDGET_ACTION",
    RetryBudgetAction: "RETRY_BUDGET_ACTION",
    ReverseBudgetAction: "REVERSE_BUDGET_ACTION",
};
export const SubscriberFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Address && { Address: SENSITIVE_STRING }),
});
export const ActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const ActionHistoryDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: ActionFilterSensitiveLog(obj.Action) }),
});
export const ActionHistoryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ActionHistoryDetails && {
        ActionHistoryDetails: ActionHistoryDetailsFilterSensitiveLog(obj.ActionHistoryDetails),
    }),
});
export const NotificationWithSubscribersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const CreateBudgetActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const CreateNotificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const CreateSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscriber && { Subscriber: SubscriberFilterSensitiveLog(obj.Subscriber) }),
});
export const DeleteBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: ActionFilterSensitiveLog(obj.Action) }),
});
export const DeleteSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscriber && { Subscriber: SubscriberFilterSensitiveLog(obj.Subscriber) }),
});
export const DescribeBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: ActionFilterSensitiveLog(obj.Action) }),
});
export const DescribeBudgetActionHistoriesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeBudgetActionsForAccountResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeBudgetActionsForBudgetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeSubscribersForNotificationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const UpdateBudgetActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const UpdateBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OldAction && { OldAction: ActionFilterSensitiveLog(obj.OldAction) }),
    ...(obj.NewAction && { NewAction: ActionFilterSensitiveLog(obj.NewAction) }),
});
export const UpdateSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OldSubscriber && { OldSubscriber: SubscriberFilterSensitiveLog(obj.OldSubscriber) }),
    ...(obj.NewSubscriber && { NewSubscriber: SubscriberFilterSensitiveLog(obj.NewSubscriber) }),
});
export const CreateBudgetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
