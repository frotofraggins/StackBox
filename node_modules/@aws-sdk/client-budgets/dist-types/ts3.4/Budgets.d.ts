import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { BudgetsClient } from "./BudgetsClient";
import {
  CreateBudgetActionCommandInput,
  CreateBudgetActionCommandOutput,
} from "./commands/CreateBudgetActionCommand";
import {
  CreateBudgetCommandInput,
  CreateBudgetCommandOutput,
} from "./commands/CreateBudgetCommand";
import {
  CreateNotificationCommandInput,
  CreateNotificationCommandOutput,
} from "./commands/CreateNotificationCommand";
import {
  CreateSubscriberCommandInput,
  CreateSubscriberCommandOutput,
} from "./commands/CreateSubscriberCommand";
import {
  DeleteBudgetActionCommandInput,
  DeleteBudgetActionCommandOutput,
} from "./commands/DeleteBudgetActionCommand";
import {
  DeleteBudgetCommandInput,
  DeleteBudgetCommandOutput,
} from "./commands/DeleteBudgetCommand";
import {
  DeleteNotificationCommandInput,
  DeleteNotificationCommandOutput,
} from "./commands/DeleteNotificationCommand";
import {
  DeleteSubscriberCommandInput,
  DeleteSubscriberCommandOutput,
} from "./commands/DeleteSubscriberCommand";
import {
  DescribeBudgetActionCommandInput,
  DescribeBudgetActionCommandOutput,
} from "./commands/DescribeBudgetActionCommand";
import {
  DescribeBudgetActionHistoriesCommandInput,
  DescribeBudgetActionHistoriesCommandOutput,
} from "./commands/DescribeBudgetActionHistoriesCommand";
import {
  DescribeBudgetActionsForAccountCommandInput,
  DescribeBudgetActionsForAccountCommandOutput,
} from "./commands/DescribeBudgetActionsForAccountCommand";
import {
  DescribeBudgetActionsForBudgetCommandInput,
  DescribeBudgetActionsForBudgetCommandOutput,
} from "./commands/DescribeBudgetActionsForBudgetCommand";
import {
  DescribeBudgetCommandInput,
  DescribeBudgetCommandOutput,
} from "./commands/DescribeBudgetCommand";
import {
  DescribeBudgetNotificationsForAccountCommandInput,
  DescribeBudgetNotificationsForAccountCommandOutput,
} from "./commands/DescribeBudgetNotificationsForAccountCommand";
import {
  DescribeBudgetPerformanceHistoryCommandInput,
  DescribeBudgetPerformanceHistoryCommandOutput,
} from "./commands/DescribeBudgetPerformanceHistoryCommand";
import {
  DescribeBudgetsCommandInput,
  DescribeBudgetsCommandOutput,
} from "./commands/DescribeBudgetsCommand";
import {
  DescribeNotificationsForBudgetCommandInput,
  DescribeNotificationsForBudgetCommandOutput,
} from "./commands/DescribeNotificationsForBudgetCommand";
import {
  DescribeSubscribersForNotificationCommandInput,
  DescribeSubscribersForNotificationCommandOutput,
} from "./commands/DescribeSubscribersForNotificationCommand";
import {
  ExecuteBudgetActionCommandInput,
  ExecuteBudgetActionCommandOutput,
} from "./commands/ExecuteBudgetActionCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateBudgetActionCommandInput,
  UpdateBudgetActionCommandOutput,
} from "./commands/UpdateBudgetActionCommand";
import {
  UpdateBudgetCommandInput,
  UpdateBudgetCommandOutput,
} from "./commands/UpdateBudgetCommand";
import {
  UpdateNotificationCommandInput,
  UpdateNotificationCommandOutput,
} from "./commands/UpdateNotificationCommand";
import {
  UpdateSubscriberCommandInput,
  UpdateSubscriberCommandOutput,
} from "./commands/UpdateSubscriberCommand";
export interface Budgets {
  createBudget(
    args: CreateBudgetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBudgetCommandOutput>;
  createBudget(
    args: CreateBudgetCommandInput,
    cb: (err: any, data?: CreateBudgetCommandOutput) => void
  ): void;
  createBudget(
    args: CreateBudgetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBudgetCommandOutput) => void
  ): void;
  createBudgetAction(
    args: CreateBudgetActionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBudgetActionCommandOutput>;
  createBudgetAction(
    args: CreateBudgetActionCommandInput,
    cb: (err: any, data?: CreateBudgetActionCommandOutput) => void
  ): void;
  createBudgetAction(
    args: CreateBudgetActionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBudgetActionCommandOutput) => void
  ): void;
  createNotification(
    args: CreateNotificationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateNotificationCommandOutput>;
  createNotification(
    args: CreateNotificationCommandInput,
    cb: (err: any, data?: CreateNotificationCommandOutput) => void
  ): void;
  createNotification(
    args: CreateNotificationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateNotificationCommandOutput) => void
  ): void;
  createSubscriber(
    args: CreateSubscriberCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSubscriberCommandOutput>;
  createSubscriber(
    args: CreateSubscriberCommandInput,
    cb: (err: any, data?: CreateSubscriberCommandOutput) => void
  ): void;
  createSubscriber(
    args: CreateSubscriberCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSubscriberCommandOutput) => void
  ): void;
  deleteBudget(
    args: DeleteBudgetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBudgetCommandOutput>;
  deleteBudget(
    args: DeleteBudgetCommandInput,
    cb: (err: any, data?: DeleteBudgetCommandOutput) => void
  ): void;
  deleteBudget(
    args: DeleteBudgetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBudgetCommandOutput) => void
  ): void;
  deleteBudgetAction(
    args: DeleteBudgetActionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBudgetActionCommandOutput>;
  deleteBudgetAction(
    args: DeleteBudgetActionCommandInput,
    cb: (err: any, data?: DeleteBudgetActionCommandOutput) => void
  ): void;
  deleteBudgetAction(
    args: DeleteBudgetActionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBudgetActionCommandOutput) => void
  ): void;
  deleteNotification(
    args: DeleteNotificationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteNotificationCommandOutput>;
  deleteNotification(
    args: DeleteNotificationCommandInput,
    cb: (err: any, data?: DeleteNotificationCommandOutput) => void
  ): void;
  deleteNotification(
    args: DeleteNotificationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteNotificationCommandOutput) => void
  ): void;
  deleteSubscriber(
    args: DeleteSubscriberCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSubscriberCommandOutput>;
  deleteSubscriber(
    args: DeleteSubscriberCommandInput,
    cb: (err: any, data?: DeleteSubscriberCommandOutput) => void
  ): void;
  deleteSubscriber(
    args: DeleteSubscriberCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteSubscriberCommandOutput) => void
  ): void;
  describeBudget(
    args: DescribeBudgetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBudgetCommandOutput>;
  describeBudget(
    args: DescribeBudgetCommandInput,
    cb: (err: any, data?: DescribeBudgetCommandOutput) => void
  ): void;
  describeBudget(
    args: DescribeBudgetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBudgetCommandOutput) => void
  ): void;
  describeBudgetAction(
    args: DescribeBudgetActionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBudgetActionCommandOutput>;
  describeBudgetAction(
    args: DescribeBudgetActionCommandInput,
    cb: (err: any, data?: DescribeBudgetActionCommandOutput) => void
  ): void;
  describeBudgetAction(
    args: DescribeBudgetActionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBudgetActionCommandOutput) => void
  ): void;
  describeBudgetActionHistories(
    args: DescribeBudgetActionHistoriesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBudgetActionHistoriesCommandOutput>;
  describeBudgetActionHistories(
    args: DescribeBudgetActionHistoriesCommandInput,
    cb: (err: any, data?: DescribeBudgetActionHistoriesCommandOutput) => void
  ): void;
  describeBudgetActionHistories(
    args: DescribeBudgetActionHistoriesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBudgetActionHistoriesCommandOutput) => void
  ): void;
  describeBudgetActionsForAccount(
    args: DescribeBudgetActionsForAccountCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBudgetActionsForAccountCommandOutput>;
  describeBudgetActionsForAccount(
    args: DescribeBudgetActionsForAccountCommandInput,
    cb: (err: any, data?: DescribeBudgetActionsForAccountCommandOutput) => void
  ): void;
  describeBudgetActionsForAccount(
    args: DescribeBudgetActionsForAccountCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBudgetActionsForAccountCommandOutput) => void
  ): void;
  describeBudgetActionsForBudget(
    args: DescribeBudgetActionsForBudgetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBudgetActionsForBudgetCommandOutput>;
  describeBudgetActionsForBudget(
    args: DescribeBudgetActionsForBudgetCommandInput,
    cb: (err: any, data?: DescribeBudgetActionsForBudgetCommandOutput) => void
  ): void;
  describeBudgetActionsForBudget(
    args: DescribeBudgetActionsForBudgetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBudgetActionsForBudgetCommandOutput) => void
  ): void;
  describeBudgetNotificationsForAccount(
    args: DescribeBudgetNotificationsForAccountCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBudgetNotificationsForAccountCommandOutput>;
  describeBudgetNotificationsForAccount(
    args: DescribeBudgetNotificationsForAccountCommandInput,
    cb: (
      err: any,
      data?: DescribeBudgetNotificationsForAccountCommandOutput
    ) => void
  ): void;
  describeBudgetNotificationsForAccount(
    args: DescribeBudgetNotificationsForAccountCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeBudgetNotificationsForAccountCommandOutput
    ) => void
  ): void;
  describeBudgetPerformanceHistory(
    args: DescribeBudgetPerformanceHistoryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBudgetPerformanceHistoryCommandOutput>;
  describeBudgetPerformanceHistory(
    args: DescribeBudgetPerformanceHistoryCommandInput,
    cb: (err: any, data?: DescribeBudgetPerformanceHistoryCommandOutput) => void
  ): void;
  describeBudgetPerformanceHistory(
    args: DescribeBudgetPerformanceHistoryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBudgetPerformanceHistoryCommandOutput) => void
  ): void;
  describeBudgets(
    args: DescribeBudgetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBudgetsCommandOutput>;
  describeBudgets(
    args: DescribeBudgetsCommandInput,
    cb: (err: any, data?: DescribeBudgetsCommandOutput) => void
  ): void;
  describeBudgets(
    args: DescribeBudgetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBudgetsCommandOutput) => void
  ): void;
  describeNotificationsForBudget(
    args: DescribeNotificationsForBudgetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeNotificationsForBudgetCommandOutput>;
  describeNotificationsForBudget(
    args: DescribeNotificationsForBudgetCommandInput,
    cb: (err: any, data?: DescribeNotificationsForBudgetCommandOutput) => void
  ): void;
  describeNotificationsForBudget(
    args: DescribeNotificationsForBudgetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeNotificationsForBudgetCommandOutput) => void
  ): void;
  describeSubscribersForNotification(
    args: DescribeSubscribersForNotificationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSubscribersForNotificationCommandOutput>;
  describeSubscribersForNotification(
    args: DescribeSubscribersForNotificationCommandInput,
    cb: (
      err: any,
      data?: DescribeSubscribersForNotificationCommandOutput
    ) => void
  ): void;
  describeSubscribersForNotification(
    args: DescribeSubscribersForNotificationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeSubscribersForNotificationCommandOutput
    ) => void
  ): void;
  executeBudgetAction(
    args: ExecuteBudgetActionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ExecuteBudgetActionCommandOutput>;
  executeBudgetAction(
    args: ExecuteBudgetActionCommandInput,
    cb: (err: any, data?: ExecuteBudgetActionCommandOutput) => void
  ): void;
  executeBudgetAction(
    args: ExecuteBudgetActionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ExecuteBudgetActionCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateBudget(
    args: UpdateBudgetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBudgetCommandOutput>;
  updateBudget(
    args: UpdateBudgetCommandInput,
    cb: (err: any, data?: UpdateBudgetCommandOutput) => void
  ): void;
  updateBudget(
    args: UpdateBudgetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBudgetCommandOutput) => void
  ): void;
  updateBudgetAction(
    args: UpdateBudgetActionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBudgetActionCommandOutput>;
  updateBudgetAction(
    args: UpdateBudgetActionCommandInput,
    cb: (err: any, data?: UpdateBudgetActionCommandOutput) => void
  ): void;
  updateBudgetAction(
    args: UpdateBudgetActionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBudgetActionCommandOutput) => void
  ): void;
  updateNotification(
    args: UpdateNotificationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateNotificationCommandOutput>;
  updateNotification(
    args: UpdateNotificationCommandInput,
    cb: (err: any, data?: UpdateNotificationCommandOutput) => void
  ): void;
  updateNotification(
    args: UpdateNotificationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateNotificationCommandOutput) => void
  ): void;
  updateSubscriber(
    args: UpdateSubscriberCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSubscriberCommandOutput>;
  updateSubscriber(
    args: UpdateSubscriberCommandInput,
    cb: (err: any, data?: UpdateSubscriberCommandOutput) => void
  ): void;
  updateSubscriber(
    args: UpdateSubscriberCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSubscriberCommandOutput) => void
  ): void;
}
export declare class Budgets extends BudgetsClient implements Budgets {}
