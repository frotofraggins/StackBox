version: '3.8'

# StackBox Client Services Template
# This gets customized per client deployment

services:
  # Reverse Proxy & SSL Termination
  traefik:
    image: traefik:v3.0
    container_name: ${CLIENT_ID}_traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
      - ./ssl:/ssl
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.tls=true"
    networks:
      - stackbox_network
    restart: unless-stopped

  # EspoCRM - Customer Relationship Management
  espocrm:
    image: espocrm/espocrm:latest
    container_name: ${CLIENT_ID}_espocrm
    environment:
      ESPOCRM_DATABASE_HOST: mysql
      ESPOCRM_DATABASE_USER: espocrm
      ESPOCRM_DATABASE_PASSWORD: ${DB_PASSWORD}
      ESPOCRM_DATABASE_NAME: espocrm
      ESPOCRM_ADMIN_USERNAME: ${ADMIN_USERNAME}
      ESPOCRM_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ESPOCRM_SITE_URL: https://crm.${DOMAIN}
    volumes:
      - espocrm_data:/var/www/html
      - ./config/espocrm:/var/www/html/data/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.espocrm.rule=Host(`crm.${DOMAIN}`)"
      - "traefik.http.routers.espocrm.tls=true"
      - "traefik.http.services.espocrm.loadbalancer.server.port=80"
    networks:
      - stackbox_network
    depends_on:
      - mysql
      - traefik
    restart: unless-stopped

  # Nextcloud - File Portal & Document Management
  nextcloud:
    image: nextcloud:stable
    container_name: ${CLIENT_ID}_nextcloud
    environment:
      MYSQL_HOST: mysql
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: ${DB_PASSWORD}
      NEXTCLOUD_ADMIN_USER: ${ADMIN_USERNAME}
      NEXTCLOUD_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: files.${DOMAIN}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_SECURE: tls
      SMTP_PORT: 587
      SMTP_NAME: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      MAIL_FROM_ADDRESS: noreply
      MAIL_DOMAIN: ${DOMAIN}
    volumes:
      - nextcloud_data:/var/www/html
      - nextcloud_config:/var/www/html/config
      - nextcloud_custom_apps:/var/www/html/custom_apps
      - nextcloud_themes:/var/www/html/themes
      - /mnt/client-files/${CLIENT_ID}:/var/www/html/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`files.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.middlewares.nextcloud.headers.customrequestheaders.X-Forwarded-Proto=https"
    networks:
      - stackbox_network
    depends_on:
      - mysql
      - traefik
    restart: unless-stopped

  # Cal.com - Booking System (Optional)
  calcom:
    image: calcom/cal.com:latest
    container_name: ${CLIENT_ID}_calcom
    environment:
      DATABASE_URL: mysql://calcom:${DB_PASSWORD}@mysql:3306/calcom
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: https://booking.${DOMAIN}
      EMAIL_FROM: booking@${DOMAIN}
      EMAIL_SERVER_HOST: ${SMTP_HOST}
      EMAIL_SERVER_PORT: 587
      EMAIL_SERVER_USER: ${SMTP_USER}
      EMAIL_SERVER_PASSWORD: ${SMTP_PASSWORD}
    volumes:
      - calcom_data:/app/.next
    labels:
      - "traefik.enable=${ENABLE_CALCOM:-false}"
      - "traefik.http.routers.calcom.rule=Host(`booking.${DOMAIN}`)"
      - "traefik.http.routers.calcom.tls=true"
      - "traefik.http.services.calcom.loadbalancer.server.port=3000"
    networks:
      - stackbox_network
    depends_on:
      - mysql
      - traefik
    restart: unless-stopped

  # Mailtrain - Email Marketing (Optional)
  mailtrain:
    image: mailtrain/mailtrain:latest
    container_name: ${CLIENT_ID}_mailtrain
    environment:
      MT_MYSQL_HOST: mysql
      MT_MYSQL_USER: mailtrain
      MT_MYSQL_PASSWORD: ${DB_PASSWORD}
      MT_MYSQL_DATABASE: mailtrain
      MT_ADMIN_USER: ${ADMIN_USERNAME}
      MT_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      MT_SMTP_HOST: ${SMTP_HOST}
      MT_SMTP_PORT: 587
      MT_SMTP_USER: ${SMTP_USER}
      MT_SMTP_PASS: ${SMTP_PASSWORD}
      MT_SMTP_TLS: true
    volumes:
      - mailtrain_data:/app/data
      - mailtrain_files:/app/public/mosaico/uploads
    labels:
      - "traefik.enable=${ENABLE_MAILTRAIN:-false}"
      - "traefik.http.routers.mailtrain.rule=Host(`newsletter.${DOMAIN}`)"
      - "traefik.http.routers.mailtrain.tls=true"
      - "traefik.http.services.mailtrain.loadbalancer.server.port=3000"
    networks:
      - stackbox_network
    depends_on:
      - mysql
      - traefik
    restart: unless-stopped

  # Business Website - Static Site Server
  website:
    image: nginx:alpine
    container_name: ${CLIENT_ID}_website
    volumes:
      - ./website:/usr/share/nginx/html:ro
      - ./config/nginx/website.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=Host(`${DOMAIN}`, `www.${DOMAIN}`)"
      - "traefik.http.routers.website.tls=true"
      - "traefik.http.services.website.loadbalancer.server.port=80"
    networks:
      - stackbox_network
    depends_on:
      - traefik
    restart: unless-stopped

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ${CLIENT_ID}_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: espocrm
      MYSQL_USER: espocrm
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - stackbox_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: ${CLIENT_ID}_redis
    volumes:
      - redis_data:/data
    networks:
      - stackbox_network
    restart: unless-stopped

  # Monitoring & Analytics
  plausible:
    image: plausible/analytics:latest
    container_name: ${CLIENT_ID}_analytics
    environment:
      BASE_URL: https://analytics.${DOMAIN}
      SECRET_KEY_BASE: ${ANALYTICS_SECRET}
      DATABASE_URL: postgres://plausible:${DB_PASSWORD}@postgres:5432/plausible
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.analytics.rule=Host(`analytics.${DOMAIN}`)"
      - "traefik.http.routers.analytics.tls=true"
      - "traefik.http.services.analytics.loadbalancer.server.port=8000"
    networks:
      - stackbox_network
    depends_on:
      - postgres
      - traefik
    restart: unless-stopped

  # PostgreSQL for Analytics
  postgres:
    image: postgres:13
    container_name: ${CLIENT_ID}_postgres
    environment:
      POSTGRES_DB: plausible
      POSTGRES_USER: plausible
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - stackbox_network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  postgres_data:
  espocrm_data:
  nextcloud_data:
  nextcloud_config:
  nextcloud_custom_apps:
  nextcloud_themes:
  calcom_data:
  mailtrain_data:
  mailtrain_files:

networks:
  stackbox_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
